<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
<mapper namespace="com.jeju.app.boards.BoardDAO">
	<select id="getPlaceList" resultType="BoardDTO" parameterType="Pager">
		SELECT * FROM
			(SELECT ROWNUM R, M.* FROM
				(
					SELECT * 
					FROM BOARD WHERE CATEGORY = 1 AND
					<include refid="search"></include>
				) M
				<include refid="location"></include>
			)
		WHERE R BETWEEN #{startNum} AND #{endNum}
					<choose>
						<when test="searchKind=='sk2'">
							ORDER BY FAVORITE DESC
						</when>
						<when test="searchKind=='sk3'">
							ORDER BY BOARDHITS DESC
						</when>
						<otherwise>
							ORDER BY BOARDDATE DESC
						</otherwise>
					</choose>
	</select>
	
	<select id="getPlaceCardList" resultMap="getImageList" parameterType="Map">
		SELECT * FROM
			(SELECT ROWNUM R, M.* FROM
				(
					SELECT * 
					FROM BOARD WHERE CATEGORY = 1 AND
					<include refid="search"></include>
				) M
				<include refid="location"></include>
			) A
			LEFT OUTER JOIN IMAGES I
			USING(BOARDNUM)
		WHERE R BETWEEN #{startNum} AND #{endNum}
					<choose>
						<when test="searchKind eq 'sk2'">
							ORDER BY FAVORITE DESC
						</when>
						<when test="searchKind eq 'sk3'">
							ORDER BY BOARDHITS DESC
						</when>
						<otherwise>
							ORDER BY BOARDDATE DESC
						</otherwise>
					</choose>
	</select>
	
	<select id="getPlaceHeartList" resultMap="getImageList" parameterType="Map">
		SELECT * FROM
			(
				SELECT rownum r, m.* FROM (
					SELECT b.boardnum, b.boardtitle, b.BOARDCONTENTS, b.boarddate, b.BOARDHITS, b.FAVORITE, b.CATEGORY, b.location, b.userID, h.heart, i.filename
					FROM board b
					INNER JOIN heart h ON b.boardnum = h.boardnum
					LEFT OUTER JOIN images i ON b.boardnum = i.boardnum	
					WHERE h.userid = #{userID} 
				) m WHERE category = 1 AND 
				<include refid="search"></include>
				 <choose>
						<when test="searchKind eq 'sk2'">
							ORDER BY FAVORITE DESC
						</when>
						<when test="searchKind eq 'sk3'">
							ORDER BY BOARDHITS DESC
						</when>
						<otherwise>
							ORDER BY BOARDDATE DESC
						</otherwise>
					</choose>
			) <include refid="location2"></include> r BETWEEN #{startNum} AND #{endNum}
	</select>
	
	<select id="getDinerList" resultType="BoardDTO" parameterType="Pager">
		SELECT * FROM
			(SELECT ROWNUM R, M.* FROM
				(
					SELECT * 
					FROM BOARD WHERE CATEGORY = 2 AND
					<include refid="search"></include>
				) M
				<include refid="location"></include>
			)
		WHERE R BETWEEN #{startNum} AND #{endNum}
					<choose>
						<when test="searchKind eq 'sk2'">
							ORDER BY FAVORITE DESC
						</when>
						<when test="searchKind eq 'sk3'">
							ORDER BY BOARDHITS DESC
						</when>
						<otherwise>
							ORDER BY BOARDDATE DESC
						</otherwise>
					</choose>
	</select>
	
	<select id="getDinerCardList" resultMap="getImageList" parameterType="Map">
		SELECT * FROM
			(SELECT ROWNUM R, M.* FROM
				(
					SELECT * 
					FROM BOARD WHERE CATEGORY = 2 AND
					<include refid="search"></include>
				) M
				<include refid="location"></include>
			) A
			LEFT OUTER JOIN IMAGES I
			USING(BOARDNUM)
		WHERE R BETWEEN #{startNum} AND #{endNum}
				<choose>
						<when test="searchKind eq 'sk2'">
							ORDER BY FAVORITE DESC
						</when>
						<when test="searchKind eq 'sk3'">
							ORDER BY BOARDHITS DESC
						</when>
						<otherwise>
							ORDER BY BOARDDATE DESC
						</otherwise>
					</choose>
	</select>
	
	<select id="getDinerHeartList" resultMap="getImageList" parameterType="Map">
		SELECT * FROM
			(
				SELECT rownum r, m.* FROM (
					SELECT b.boardnum, b.boardtitle, b.BOARDCONTENTS, b.boarddate, b.BOARDHITS, b.FAVORITE, b.CATEGORY, b.location, b.userID, h.heart, i.filename
					FROM board b
					INNER JOIN heart h ON b.boardnum = h.boardnum
					LEFT OUTER JOIN images i ON b.boardnum = i.boardnum	
					WHERE h.userid = #{userID} 
				) m WHERE category = 2 AND 
				<include refid="search"></include>
				 <choose>
						<when test="searchKind eq 'sk2'">
							ORDER BY FAVORITE DESC
						</when>
						<when test="searchKind eq 'sk3'">
							ORDER BY BOARDHITS DESC
						</when>
						<otherwise>
							ORDER BY BOARDDATE DESC
						</otherwise>
					</choose>
			) <include refid="location2"></include> r BETWEEN #{startNum} AND #{endNum}	
	</select>
	
	<select id="getHotelList" resultType="BoardDTO" parameterType="Pager">
		SELECT * FROM
			(SELECT ROWNUM R, M.* FROM
				(
					SELECT * 
					FROM BOARD WHERE CATEGORY = 3 AND
					<include refid="search"></include>
				) M
				<include refid="location"></include>
			)
		WHERE R BETWEEN #{startNum} AND #{endNum}
					<choose>
						<when test="searchKind=='sk2'">
							ORDER BY FAVORITE DESC
						</when>
						<when test="searchKind=='sk3'">
							ORDER BY BOARDHITS DESC
						</when>
						<otherwise>
							ORDER BY BOARDDATE DESC
						</otherwise>
					</choose>
	</select>
	
	<select id="getHotelCardList" resultMap="getImageList" parameterType="Map">
		SELECT * FROM
			(SELECT ROWNUM R, M.* FROM
				(
					SELECT * 
					FROM BOARD WHERE CATEGORY = 3 AND
					<include refid="search"></include>
				
				) M
				<include refid="location"></include>
			) A
			LEFT OUTER JOIN IMAGES I
			USING(BOARDNUM)
		WHERE R BETWEEN #{startNum} AND #{endNum}	
					<choose>
						<when test="searchKind eq 'sk2'">
							ORDER BY FAVORITE DESC
						</when>
						<when test="searchKind eq 'sk3'">
							ORDER BY BOARDHITS DESC
						</when>
						<otherwise>
							ORDER BY BOARDDATE DESC
						</otherwise>
					</choose>
	</select>
	
	<select id="getHotelHeartList" resultMap="getImageList" parameterType="Map">
		SELECT * FROM
			(
				SELECT rownum r, m.* FROM (
					SELECT b.boardnum, b.boardtitle, b.BOARDCONTENTS, b.boarddate, b.BOARDHITS, b.FAVORITE, b.CATEGORY, b.location, b.userID, h.heart, i.filename
					FROM board b
					INNER JOIN heart h ON b.boardnum = h.boardnum
					LEFT OUTER JOIN images i ON b.boardnum = i.boardnum	
					WHERE h.userid = #{userID} 
				) m WHERE category = 3 AND 
				<include refid="search"></include>
				 <choose>
						<when test="searchKind eq 'sk2'">
							ORDER BY FAVORITE DESC
						</when>
						<when test="searchKind eq 'sk3'">
							ORDER BY BOARDHITS DESC
						</when>
						<otherwise>
							ORDER BY BOARDDATE DESC
						</otherwise>
					</choose>
			) <include refid="location2"></include> r BETWEEN #{startNum} AND #{endNum}	
	</select>
	
	<select id="getDetail" parameterType="BoardDTO" resultMap="getDetailResult">
		SELECT *
		FROM BOARD N
			 LEFT OUTER JOIN 
			 IMAGES NF
			 USING(BOARDNUM)
		WHERE BOARDNUM = #{boardNum}
	</select>
	
	<resultMap type="BoardDTO" id="getDetailResult">
		<id column="BOARDNUM" property="boardNum"/>
		<result column="USERID" property="userID"/>
		<result column="BOARDTITLE" property="boardTitle"/>
		<result column="BOARDCONTENTS" property="boardContents"/>
		<result column="BOARDDATE" property="boardDate"/>
		<result column="BOARDHITS" property="boardHits"/>
		<result column="LOCATION" property="location"/>
		<result column="FAVORITE" property="favorite"/>
		<result column="CATEGORY" property="category"/>
		<collection property="boardFileDTOs" javaType="List" ofType="BoardFileDTO">
			<id column="FILENUM" property="fileNum"/>
			<result column="FILENAME" property="fileName"/>
			<result column="OLDNAME" property="oldName"/>
		</collection>
	</resultMap>
	
	<resultMap type="BoardDTO2" id="getImageList">
		<id column="BOARDNUM" property="boardNum"/>
		<result column="USERID" property="userID"/>
		<result column="BOARDTITLE" property="boardTitle"/>
		<result column="BOARDCONTENTS" property="boardContents"/>
		<result column="BOARDDATE" property="boardDate"/>
		<result column="BOARDHITS" property="boardHits"/>
		<result column="LOCATION" property="location"/>
		<result column="FAVORITE" property="favorite"/>
		<result column="CATEGORY" property="category"/>
		<result property="fileName" column="FILENAME"/>
		<result property="searchKind" column="SEARCHKIND"/>
	</resultMap>
	
	<sql id="search">
				<choose>
					<when test="kind eq 'k2'">
						BOARDCONTENTS LIKE '%'||#{search, jdbcType=VARCHAR}||'%'
					</when>
					<when test="kind eq 'k3'">
						BOARDLOCATION LIKE '%'||#{search, jdbcType=VARCHAR}||'%'
					</when>
					<otherwise>
						BOARDTITLE LIKE '%'||#{search, jdbcType=VARCHAR}||'%'
					</otherwise>
				</choose>
	</sql>
	
	<sql id="location">
				<choose>
					<when test="locationKind eq 'lo2'">
						WHERE LOCATION = '제주시'
					</when>
					<when test="locationKind eq 'lo3'">
						WHERE LOCATION = '애월'
					</when>
					<when test="locationKind eq 'lo4'">
						WHERE LOCATION = '서귀포'
					</when>
					<when test="locationKind eq 'lo5'">
						WHERE LOCATION = '남원'
					</when>
					<when test="locationKind eq 'lo6'">
						WHERE LOCATION = '조천'
					</when>
					<when test="locationKind eq 'lo7'">
						WHERE LOCATION = '중문'
					</when>
					<when test="locationKind eq 'lo8'">
						WHERE LOCATION = '한림'
					</when>
					<otherwise>
						
					</otherwise>
				</choose>
	</sql>

	<sql id="location2">
				<choose>
					<when test="locationKind eq 'lo2'">
						WHERE LOCATION = '제주시' AND
					</when>
					<when test="locationKind eq 'lo3'">
						WHERE LOCATION = '애월' AND
					</when>
					<when test="locationKind eq 'lo4'">
						WHERE LOCATION = '서귀포' AND
					</when>
					<when test="locationKind eq 'lo5'">
						WHERE LOCATION = '남원' AND
					</when>
					<when test="locationKind eq 'lo6'">
						WHERE LOCATION = '조천' AND
					</when>
					<when test="locationKind eq 'lo7'">
						WHERE LOCATION = '중문' AND
					</when>
					<when test="locationKind eq 'lo8'">
						WHERE LOCATION = '한림' AND
					</when>
					<otherwise>
						WHERE
					</otherwise>
				</choose>
	</sql>	
	
	<select id="getTotalCount1" resultType="Long" parameterType="Pager">
		SELECT COUNT(BOARDNUM) FROM
		(
			SELECT * FROM BOARD WHERE BOARDNUM > 0 AND CATEGORY = 1 AND
			<include refid="search"></include>
		)<include refid="location"></include>
	</select>
	
	<select id="getTotalHeartCount1" resultType="Long" parameterType="Pager">
		SELECT COUNT(boardNum) FROM
	(
		SELECT rownum r, m.* FROM (
			SELECT b.boardnum, b.boardtitle, b.BOARDCONTENTS, b.boarddate, b.BOARDHITS, b.FAVORITE, b.CATEGORY, b.location, b.userID, h.heart, i.filename
			FROM board b
			INNER JOIN heart h ON b.boardnum = h.boardnum
			LEFT OUTER JOIN images i ON b.boardnum = i.boardnum	
		) m WHERE category = 1
	)
	</select>
	
	<select id="getTotalCount2" resultType="Long" parameterType="Pager">
		SELECT COUNT(BOARDNUM) FROM
		(
			SELECT * FROM BOARD WHERE BOARDNUM > 0 AND CATEGORY = 2 AND
			<include refid="search"></include>
		)<include refid="location"></include>
	</select>
	
	<select id="getTotalHeartCount2" resultType="Long" parameterType="Pager">
		SELECT COUNT(boardNum) FROM
	(
		SELECT rownum r, m.* FROM (
			SELECT b.boardnum, b.boardtitle, b.BOARDCONTENTS, b.boarddate, b.BOARDHITS, b.FAVORITE, b.CATEGORY, b.location, b.userID, h.heart, i.filename
			FROM board b
			INNER JOIN heart h ON b.boardnum = h.boardnum
			LEFT OUTER JOIN images i ON b.boardnum = i.boardnum	
		) m WHERE category = 2
	)
	</select>	
	
	<select id="getTotalCount3" resultType="Long" parameterType="Pager">
		SELECT COUNT(BOARDNUM) FROM
		(
			SELECT * FROM BOARD WHERE BOARDNUM > 0 AND CATEGORY = 3 AND
			<include refid="search"></include>
		)<include refid="location"></include>
	</select>
	
	<select id="getTotalHeartCount3" resultType="Long" parameterType="Pager">
		SELECT COUNT(boardNum) FROM
	(
		SELECT rownum r, m.* FROM (
			SELECT b.boardnum, b.boardtitle, b.BOARDCONTENTS, b.boarddate, b.BOARDHITS, b.FAVORITE, b.CATEGORY, b.location, b.userID, h.heart, i.filename
			FROM board b
			INNER JOIN heart h ON b.boardnum = h.boardnum
			LEFT OUTER JOIN images i ON b.boardnum = i.boardnum
		) m WHERE category = 3
	)
	</select>	
	
	<select id="getMaxHits" resultType="BoardDTO">
		SELECT * FROM board WHERE boardHits = (SELECT max(boardhits) FROM board) OR BOARDHITS = (SELECT (MAX(BOARDHITS)-1) FROM BOARD)
	</select>
	
	<insert id="add" parameterType="BoardDTO">
		<selectKey order="BEFORE" keyProperty="boardNum" resultType="Long">
  			SELECT BOARD_SEQ.NEXTVAL FROM DUAL
  		</selectKey>
		INSERT INTO BOARD 
				(USERID, BOARDNUM, BOARDTITLE, BOARDCONTENTS, BOARDDATE, BOARDHITS, LOCATION, FAVORITE, CATEGORY)
		VALUES (#{userID}, BOARD_SEQ.CURRVAL, #{boardTitle}, #{boardContents}, SYSDATE, 0, #{location}, 0, #{category})
	</insert>
	
 	<insert id="addFile" parameterType="BoardFileDTO">
		INSERT INTO IMAGES
		VALUES (file_seq.nextval, #{boardNum}, #{fileName}, #{oldName})
	</insert>
	
	<update id="updateHits" parameterType="BoardDTO">
		UPDATE BOARD SET BOARDHITS=BOARDHITS+1 WHERE BOARDNUM=#{boardNum}
	</update>
	
	<update id="update" parameterType="BoardDTO">
		UPDATE BOARD SET 
			BOARDTITLE=#{boardTitle}, BOARDCONTENTS=#{boardContents}, LOCATION=#{location}, CATEGORY=#{category}
		WHERE BOARDNUM=#{boardNum}
	</update>
	
	<delete id="delete" parameterType="BoardDTO">
		DELETE BOARD WHERE BOARDNUM=#{boardNum}
	</delete>
	
	<delete id="fileDelete" parameterType="BoardFileDTO">
		DELETE IMAGES WHERE FILENUM=#{fileNum}
	</delete>
	
	<delete id="fileDeleteAll" parameterType="BoardDTO">
		DELETE IMAGES WHERE BOARDNUM=#{boardNum}
	</delete>
	
	<select id="getFileDetail" parameterType="BoardFileDTO" resultType="BoardFileDTO">
		SELECT * FROM IMAGES WHERE BOARDNUM=#{boardNum}
	</select>
	
	<select id="getMyList" resultType="BoardDTO" parameterType="Map">
		SELECT rownum r, m.* from
		(
			SELECT * FROM board WHERE userID=#{userID}
		) m WHERE rownum BETWEEN #{startNum} AND #{endNum}
	</select>
	
	<!-- 좋아요 기능 -->
	<select id="findHeart" parameterType="HeartDTO" resultType="HeartDTO">
		SELECT * FROM HEART WHERE USERID=#{userID} AND BOARDNUM=#{boardNum}
	</select>
	
	<update id="plusHeart" parameterType="HeartDTO">
		UPDATE BOARD SET 
			FAVORITE = FAVORITE+1 WHERE BOARDNUM=#{boardNum}
	</update>
	
	<update id="minusHeart" parameterType="HeartDTO">
		UPDATE BOARD SET 
			FAVORITE = FAVORITE-1 WHERE BOARDNUM=#{boardNum}
	</update>
	
	<insert id="insertHeart" parameterType="HeartDTO">
		INSERT INTO HEART VALUES
			(#{userID}, #{boardNum}, 1)
	</insert>
	
	<update id="deleteHeart" parameterType="HeartDTO">
		DELETE HEART WHERE BOARDNUM=#{boardNum} AND USERID=#{userID}
	</update>
	

</mapper>